{"title":"python在列表，元组，字典变量前加_号","uid":"5c7eb2cd430dd8f1d04c4abbeb86267e","slug":"python 在列表，元组，字典变量前加_号。。","date":"2022-03-22T15:28:01.000Z","updated":"2022-03-29T10:15:29.267Z","comments":true,"path":"api/articles/python 在列表，元组，字典变量前加_号。。.json","keywords":"GHower 博客 架构 协作 Spring java","cover":[],"content":"<h1 id=\"标题\"><a href=\"#标题\" class=\"headerlink\" title=\"标题\"></a>标题</h1><p>在python基础学习中可能遗漏这一点，现在补上；<br>在一个列表、元组或字典变量前加*，结果如下<br><img src=\"https://cdn.nlark.com/yuque/0/2022/png/21909802/1648547875816-78048d84-afd0-4ac8-8cce-282101f15a73.png#clientId=u80b6d177-fb8e-4&crop=0&crop=0&crop=1&crop=1&from=paste&id=ubbad341f&margin=%5Bobject%20Object%5D&originHeight=287&originWidth=675&originalType=url&ratio=1&rotation=0&showTitle=false&status=done&style=none&taskId=u43ade33c-757a-4358-a169-2c405ec3a3e&title=\" alt=\"img.png\"></p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2022/gif/21909802/1648547875706-cec28ad0-20c3-4d7d-b276-b59abf0088ef.gif#clientId=u80b6d177-fb8e-4&crop=0&crop=0&crop=1&crop=1&from=paste&id=ua4fd38d9&margin=%5Bobject%20Object%5D&name=image.png&originHeight=1&originWidth=1&originalType=url&ratio=1&rotation=0&showTitle=false&size=43&status=done&style=none&taskId=udcfd0e8e-c97d-4724-949b-c0887f1ed14&title=\" alt=\"image.png\"></p>\n<p>可以发现，在列表前加*号，会将列表拆分成一个一个的独立元素，不光是列表、元组、字典，由numpy生成的向量也可以拆分；</p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2022/png/21909802/1648547875824-622cf013-7bc1-40f0-9377-00dc5a3f831c.png#clientId=u80b6d177-fb8e-4&crop=0&crop=0&crop=1&crop=1&from=paste&id=u57f1d2d1&margin=%5Bobject%20Object%5D&originHeight=218&originWidth=742&originalType=url&ratio=1&rotation=0&showTitle=false&status=done&style=none&taskId=uf3472193-e4a7-46bb-bc73-e14280478e0&title=\"></p>\n<p>那这些又有什么用呢？了解过函数中*args和**kwargs的人应该知道，这两个形参都接收若干个参数，通常我们将其称为参数组；<br />          </p>\n<ul>\n<li>*args：接收若干个位置参数，转换成元组tuple形式</li>\n<li>**kwargs：接收若干个关键字参数，转换成字典dict形式</li>\n</ul>\n<p>ps:需要注意的是位置参数*args，一定要在关键字参数**kwargs前<br>看下面的例子；</p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2022/png/21909802/1648547875825-ae14a08f-ee0d-405a-81f7-a99e13d28112.png#clientId=u80b6d177-fb8e-4&crop=0&crop=0&crop=1&crop=1&from=paste&id=u7753a28f&margin=%5Bobject%20Object%5D&originHeight=482&originWidth=533&originalType=url&ratio=1&rotation=0&showTitle=false&status=done&style=none&taskId=u49a19fa6-28e4-41f3-9b21-a4e336887da&title=\"></p>\n<p>不难发现，如果不加*，add函数将整个列表当做一个元素使用,也就是add(([1,2,4,5],))。</p>\n<p>而带有*号的参数，此时相当于add((1, 2, 4, 5));</p>\n<p>*号也可以作用于二维的列表；</p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2022/png/21909802/1648547875819-97401cc9-cbaf-44eb-a232-84fc6fd4ad22.png#clientId=u80b6d177-fb8e-4&crop=0&crop=0&crop=1&crop=1&from=paste&id=u54ffd642&margin=%5Bobject%20Object%5D&originHeight=173&originWidth=416&originalType=url&ratio=1&rotation=0&showTitle=false&status=done&style=none&taskId=u1c3f4cd2-6150-4b31-95e4-f2d35e20ccc&title=\"></p>\n<p>显然也是将列表进行拆分，结果是两个一维列表；</p>\n<p><img src=\"https://cdn.nlark.com/yuque/0/2022/png/21909802/1648547876246-fe86735c-3d6c-4f11-81ce-d297dadcd710.png#clientId=u80b6d177-fb8e-4&crop=0&crop=0&crop=1&crop=1&from=paste&id=u34f2666b&margin=%5Bobject%20Object%5D&originHeight=418&originWidth=384&originalType=url&ratio=1&rotation=0&showTitle=false&status=done&style=none&taskId=u08346bb4-bc6f-4296-aff5-17517310e7b&title=\"></p>\n<p>结果也与上面所说相同；</p>\n<p>这么一看，这个带*变量的作用，就仿佛是把列表解开一层似的，而python中有一个zip函数，功能与之相反。<br>zip是将一个或多个可迭代对象进行包装压缩，返回将结果是列表；</p>\n<p>通俗的说：<strong>zip()压缩可迭代对象，*号解压可迭代对象；</strong></p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>最后需要<strong>注意</strong>的是：</p>\n<ul>\n<li>可迭代对象才可以使用*号拆分；</li>\n<li>带*号变量严格来说并不是一个变量，而更应该称为参数，它是不能赋值给其他变量的，但可以作为参数传递；</li>\n</ul></blockquote>\n","feature":true,"text":"标题在python基础学习中可能遗漏这一点，现在补上；在一个列表、元组或字典变量前加*，结果如下 可以发现，在列表前加*号，会将列表拆分成一个一个的独立元素，不光是列表、元组、字典，由numpy生成的向量也可以拆分； 那这些又有什么用呢？了解过函数中*args和**kwargs的...","link":"","photos":[],"count_time":{"symbolsCount":632,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"python","slug":"python","count":1,"path":"api/tags/python.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E6%A0%87%E9%A2%98\"><span class=\"toc-text\">标题</span></a></li></ol>","author":{"name":"GHower","slug":"blog-author","avatar":"https://blog-gh-site.oss-cn-shenzhen.aliyuncs.com/Logo.png","link":"/","description":"一位正在转移博客的技术人 <br /> @ <b>公众号：GHower</b>","socials":{"github":"https://github.com/GHower","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_40877427","juejin":"https://juejin.cn/user/4503250791314472","customs":{"wechat":{"icon":"/icons/favicons/wechat.png","link":"/icons/favicons/custom/wechat-qrcode.jpg"},"email":{"icon":"/icons/favicons/email.svg","link":"mailto:1520567597@qq.com?subject=主题&body=内容"}}}},"mapped":true,"prev_post":{"title":"GithubPages搭建教程","uid":"415a4ba685615286d7d2dd46636fc692","slug":"GithubPages搭建教程","date":"2022-03-22T15:28:01.000Z","updated":"2022-03-29T10:19:10.942Z","comments":true,"path":"api/articles/GithubPages搭建教程.json","keywords":"GHower 博客 架构 协作 Spring java","cover":[],"text":"一、介绍这里省略300字介绍….. 二、创建自己的GithubPages1.基本页面要创建GithubPages 需要创建一个 username.Github.io的仓库 2.选择GithubPages的主题 3.测试这里以简历的主题做测试，选Cayman theme，来到ind...","link":"","photos":[],"count_time":{"symbolsCount":"2.5k","symbolsTime":"2 mins."},"categories":[{"name":"其他","slug":"其他","count":1,"path":"api/categories/其他.json"}],"tags":[{"name":"建站","slug":"建站","count":1,"path":"api/tags/建站.json"}],"author":{"name":"GHower","slug":"blog-author","avatar":"https://blog-gh-site.oss-cn-shenzhen.aliyuncs.com/Logo.png","link":"/","description":"一位正在转移博客的技术人 <br /> @ <b>公众号：GHower</b>","socials":{"github":"https://github.com/GHower","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_40877427","juejin":"https://juejin.cn/user/4503250791314472","customs":{"wechat":{"icon":"/icons/favicons/wechat.png","link":"/icons/favicons/custom/wechat-qrcode.jpg"},"email":{"icon":"/icons/favicons/email.svg","link":"mailto:1520567597@qq.com?subject=主题&body=内容"}}}},"feature":true},"next_post":{"title":"【设计模式】23种设计模式(java)学前必备课！","uid":"fe90f43a8852ee9177afcbd4d51ee774","slug":"【设计模式】23种设计模式(java)学前必备课！","date":"2022-03-22T15:28:01.000Z","updated":"2022-03-29T10:18:47.590Z","comments":true,"path":"api/articles/【设计模式】23种设计模式(java)学前必备课！.json","keywords":"GHower 博客 架构 协作 Spring java","cover":null,"text":"六大原则这篇只有部分代码实例。 1、单一职责原则(Sington Principle)不要存在多于一个导致类变更的原因，也就是说每个类应该实现单一的职责，如若不然，就应该把类拆分。不要让一个类承担过多的职责，避免职责耦合在一起 2、里氏替换原则（Liskov Substituti...","link":"","photos":[],"count_time":{"symbolsCount":"2.9k","symbolsTime":"3 mins."},"categories":[{"name":"java","slug":"java","count":2,"path":"api/categories/java.json"}],"tags":[{"name":"java","slug":"java","count":2,"path":"api/tags/java.json"},{"name":"设计模式","slug":"设计模式","count":1,"path":"api/tags/设计模式.json"}],"author":{"name":"GHower","slug":"blog-author","avatar":"https://blog-gh-site.oss-cn-shenzhen.aliyuncs.com/Logo.png","link":"/","description":"一位正在转移博客的技术人 <br /> @ <b>公众号：GHower</b>","socials":{"github":"https://github.com/GHower","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"https://blog.csdn.net/weixin_40877427","juejin":"https://juejin.cn/user/4503250791314472","customs":{"wechat":{"icon":"/icons/favicons/wechat.png","link":"/icons/favicons/custom/wechat-qrcode.jpg"},"email":{"icon":"/icons/favicons/email.svg","link":"mailto:1520567597@qq.com?subject=主题&body=内容"}}}},"feature":true}}